{"version":3,"sources":["./src/environments/environment.ts","./src/app/marvel.service.ts","./src/app/quiz/quiz.component.ts","./src/app/quiz/quiz.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\ninterface Hero {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class MarvelService {\r\n  apiKey = \"d49166f47ed95b64b29bf9077ea82d9c\";\r\n  url = \"https://gateway.marvel.com/v1/public\";\r\n  heroes: Hero[]\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getHeroes() {\r\n    const requestUrl = \r\n    this.url + \"/characters\" + \"?apikey=\" + this.apiKey;\r\n    this.http.get(requestUrl).subscribe( data => {\r\n      console.log(data);\r\n    });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MarvelService } from '../marvel.service';\r\n\r\n@Component({\r\n  selector: 'app-quiz',\r\n  templateUrl: './quiz.component.html',\r\n  styleUrls: ['./quiz.component.css'],\r\n  providers: [MarvelService]\r\n})\r\nexport class QuizComponent implements OnInit {\r\n\r\n\r\n  constructor(public marvelService: MarvelService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n\r\n}\r\n","<header>\r\n<p>Who is your inner Super Hero?</p>\r\n</header>\r\n\r\n<div class=\"question1\">\r\n  <p>Question 1/6: Would you rather...</p>\r\n    \r\n <ul>\r\n     <li>Help someone in need</li>\r\n     <li>Depends on the day</li>\r\n     <li>Rule the world at all costs</li>\r\n </ul>\r\n\r\n <button class=\"q1button\" (click) = \"marvelService.getHeroes()\"> Next Question</button>\r\n</div>\r\n\r\n<div class=\"question2\">\r\n<p>Question 2/6: How do you identify ~</p>\r\n<ul>\r\n    <li>Woman Warrior</li>\r\n    <li>Somewhere in between</li>\r\n    <li>Warrior</li>\r\n</ul>\r\n<button class=\"q2button\" (click) = \"marvelService.getHeroes()\"> Next Question</button>\r\n</div>\r\n\r\n<div class=\"question3\">\r\n<p>Question 3/6: What is your go to snack?</p>\r\n    <ul>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n    </ul>\r\n    <button class=\"q3button\" (click) = \"marvelService.getHeroes()\"> Next Question</button>\r\n</div>\r\n\r\n<div class=\"question4\">\r\n<p>Question 4/6: Which color wheel describes your vibe?</p>\r\n    <ul>\r\n        <li>blue,green</li>\r\n        <li>red,yellow</li>\r\n        <li>black,purple</li>\r\n    </ul>\r\n    <button class=\"q4button\" (click) = \"marvelService.getHeroes()\"> Next Question</button>\r\n</div>\r\n\r\n<div class=\"question5\">\r\n<p>Question 5/6: How would you like to get places?</p>\r\n    \r\n    <ul>\r\n        <li>Drive, duh</li>\r\n        <li>Fly through the sky</li>        \r\n        <li>Teleport... of course</li>\r\n    </ul>\r\n    <button class=\"q5button\" (click) = \"marvelService.getHeroes()\"> Next Question</button>\r\n</div>\r\n\r\n<div class=\"question6\">\r\n<p>Question 6/6: </p>\r\n    \r\n    <ul>\r\n        <li></li>\r\n        <li></li>\r\n        <li></li>\r\n    </ul>\r\n    <button class=\"q6button\" (click) = \"marvelService.getHeroes()\"> Next Question</button>\r\n</div>\r\n\r\n<div class=\"finalPage\">\r\n    <p>TESTING COMPLETED</p>\r\n\r\n    <p>Click FINISH to find out who your</p>\r\n    <p>Inner Super Hero is</p>\r\n\r\n    <button (click) = \"marvelService.getHeroes()\"> Finish </button>\r\n</div>\r\n\r\n<button  (click) = \"marvelService.getHeroes()\"> Console Log List </button>\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FinalProject';\n}\n","<app-quiz></app-quiz>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { QuizComponent } from './quiz/quiz.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    QuizComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}